# Given your birthday and the current date, calculate your age 
# in days. Compensate for leap days. Assume that the birthday 
# and current date are correct dates (and no time travel). 
# Simply put, if you were born 1 Jan 2012 and todays date is 
# 2 Jan 2012 you are 1 day old.

# IMPORTANT: You don't need to solve the problem yet! 
# Just brainstorm ways you might approach it!
import datetime

now = datetime.datetime.now()

daysOfMonths = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

def isLeapYear(year):
    if (year % 4) == 0 :
        return True
    else:
        return False
    ##
    # Your code here. Return True or False
    # Pseudo code for this algorithm is found at
    # http://en.wikipedia.org/wiki/Leap_year#Algorithm
    ##

    


def daysBetweenDates(y1, m1, d1, y2, m2, d2):
   # if d2>d1 :
    d= d2-d1
  #  else:
    #    d= d2+daysOfMonths[m2-1]
    #    m2 -=1
    if m2 > m1:
      
        for x in range(m1,m2) :
            d+=daysOfMonths[x-1]
            m=m2-m1
           
    else:
        for x in range(m2,m1) :
      #  for k in range ( m1 , 12):
            d-=daysOfMonths[x-1]
        #for s in range (1 , m2) :
         #    d+=daysOfMonths[s-1]
        #y2-=1
    y=y2-y1
   # ystart=0
    #if m1 <= 2 :
     #   ystart=y1
    #else:
     #   ystart=y1+1
    #if 
    for y in range ( y1 , y2):
        if isLeapYear(y):
            d+=366
        else:
            d+=365
    if m1>=3 and isLeapYear(y1):
        d-=1
        
    days=d
    # Your code here.
    ##
    return days
tod= now.day
tom=now.month
toy=now.year

ds=  daysBetweenDates(1984,5,31,toy,tom,tod)
print ds
